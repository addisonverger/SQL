--For this project, I downloaded the "Spotify top 50 songs in 2021" dataset from Kaggle: https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021?select=spotify_top50_2021.csv

--First, I created a table to insert Spotify data into.

CREATE TABLE BIT_DB.Spotifydata (
	id integer PRIMARY KEY,
	artist_name varchar NOT NULL,
	track_name varchar NOT NULL,
	track_id varchar NOT NULL,
	popularity integer NOT NULL,
	danceability decimal(4,3) NOT NULL,
	energy decimal(4,3) NOT NULL,
	key integer NOT NULL,
	loudness decimal(5,3) NOT NULL,
	mode integer NOT NULL,
	speechiness decimal(5,4) NOT NULL,
	acousticness decimal(6,5) NOT NULL,
	instrumentalness text NOT NULL,
	liveness decimal(5,4) NOT NULL,
	valence decimal(4,3) NOT NULL,
	tempo decimal(6,3) NOT NULL,
	duration_ms integer NOT NULL,
	time_signature integer NOT NULL)

--Then, I inserted the .csv file into the table.

--Finally, I performed analytics on the data using SQL. 

--What are the ten most popular tracks?

SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10

--What is the average danceability of songs per artist?

SELECT artist_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name

--What is the average energy of songs featuring a 3/4 time signature?

SELECT AVG(energy)
FROM BIT_DB.Spotifydata
WHERE time_signature = 3

--Which artist sings the shortest song?

SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms ASC LIMIT 1

--Which artists have more than one song in the dataset and how many do they have? 

SELECT artist_name, COUNT(id)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(id) > 1
ORDER BY COUNT(id) DESC, artist_name

--Which artist(s) has the most songs in the dataset?

SELECT artist_name, COUNT(id)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(id) = (
    SELECT COUNT(id)
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY COUNT(id) DESC LIMIT 1
)
ORDER BY artist_name

--Calculate the average popularity for the artists in the Spotify data table. 
--Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH avgPopTable AS (
    SELECT artist_name, AVG(popularity) AS avg_popularity
    FROM Spotifydata
    GROUP BY artist_name
)

SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM avgPopTable
WHERE avg_popularity >= 90
ORDER BY avg_popularity DESC
