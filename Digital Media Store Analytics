--For this project, I used a dataset called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.
--I used SQLite to query the database.

--1. Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT firstName || ' ' || lastName AS full_name, customerId, country
FROM chinook.customers
WHERE country <> 'USA';

--2. Show only the Customers from Brazil.

SELECT firstName || ' ' || lastName AS full_name, customerId, country
FROM chinook.customers
WHERE country = 'Brazil';

--3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.firstName || ' ' || c.lastname AS full_name, i.invoiceId, DATE(i.invoiceDate), i.billingCountry
FROM chinook.invoices i
JOIN chinook.customers c
ON i.customerId = c.customerId
WHERE c.country = 'Brazil';

--4. Show the Employees who are Sales Agents.

SELECT *
FROM chinook.employees
WHERE title LIKE '%Sales%' 
AND title LIKE '%Agent%';

--5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT billingCountry
FROM chinook.invoices;

--6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT i.invoiceId, e.firstName || ' ' || e.lastName AS sales_agent_full_name 
FROM chinook.customers c
JOIN chinook.invoices i
ON c.customerId = i.customerId 
JOIN chinook.employees e
ON c.supportRepId = e.employeeId
ORDER BY i.invoiceId;

--7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT i.total, c.firstName || ' ' || c.lastName AS customer_name, c.country, 
e.firstName || ' ' || e.lastName AS sales_agent_name
FROM chinook.customers c
JOIN chinook.invoices i
ON c.customerId = i.customerId 
JOIN chinook.employees e
ON c.supportRepId = e.employeeId;

--8. How many Invoices were there in 2009?

SELECT COUNT(invoiceId)
FROM chinook.invoices
WHERE invoiceDate LIKE '2009%';

--9. What are the total sales for 2009?

SELECT SUM(total)
FROM chinook.invoices
WHERE invoiceDate LIKE '2009%';

--10. Write a query that includes the purchased track name with each invoice line ID.

SELECT t.name, i.invoiceLineId 
FROM chinook.tracks t
JOIN chinook.invoice_items i
ON t.trackId = i.trackId;

--11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT a.track_name, a.artist_name, i.invoiceLineId
FROM
	(SELECT t.trackID AS track_id, t.name AS track_name, art.name AS artist_name
	FROM chinook.albums alb
	JOIN chinook.tracks t
	ON alb.albumId = t.AlbumId
	JOIN chinook.artists art
	ON alb.artistId = art.artistId) a
JOIN chinook.invoice_items i
ON a.track_id = i.trackId;

--12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.name AS track_name, a.title AS album_name, m.name AS media_type, g.name AS genre
FROM chinook.tracks t
JOIN chinook.albums a
ON t.albumId = a.AlbumId
JOIN chinook.media_types m
ON t.mediaTypeId = m.MediaTypeId
JOIN chinook.genres g
ON t.genreId = g.GenreId;

--13. Show the total sales made by each sales agent.

SELECT e.firstName || ' ' || e.lastName AS sales_agent_full_name, ROUND(SUM(i.total), 2) AS total_sales
FROM chinook.customers c
JOIN chinook.invoices i
ON c.customerId = i.customerId 
JOIN chinook.employees e
ON c.supportRepId = e.employeeId
WHERE e.title LIKE '%Sales%' 
AND e.title LIKE '%Agent%'
GROUP BY sales_agent_full_name
ORDER BY e.lastName;

--14. Which sales agent made the most dollars in sales in 2009?

SELECT e.firstName || ' ' || e.lastName AS sales_agent_full_name, ROUND(SUM(i.total), 2) AS total_sales
FROM chinook.customers c
JOIN chinook.invoices i
ON c.customerId = i.customerId 
JOIN chinook.employees e
ON c.supportRepId = e.employeeId
WHERE e.title LIKE '%Sales%' 
AND e.title LIKE '%Agent%'
AND i.invoiceDate LIKE '2009%'
GROUP BY sales_agent_full_name
ORDER BY total_sales DESC LIMIT 1;
