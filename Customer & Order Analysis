--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--1. How many orders were placed in January? 

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE LENGTH(orderid) = 6
AND orderid <> 'ORDER ID'

--2. How many of those orders were for an iPhone?

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE product = 'iPhone'
AND LENGTH(orderID) = 6
AND orderID <> 'ORDER ID'

--3. Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT customers.acctnum
FROM BIT_DB.customers customers
INNER JOIN BIT_DB.FebSales febSales
ON customers.order_id = febSales.orderID
WHERE length(febSales.orderID) = 6
AND febSales.orderID <> 'Order ID'

--4. Which product was the cheapest one sold in January, and what was the price?

SELECT DISTINCT product, price
FROM BIT_DB.JanSales
WHERE price in (
	SELECT MIN(price) FROM BIT_DB.JanSales)

--5. What is the total revenue for each product sold in January?

SELECT product, SUM(quantity) * price AS total_revenue
FROM BIT_DB.JanSales
GROUP BY product

--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product, SUM(quantity), SUM(quantity) * price AS total_revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product

--7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT customers.acctnum), AVG(febSales.Quantity * febSales.price)
FROM BIT_DB.FebSales febSales
JOIN BIT_DB.customers customers
ON febSales.orderid = customers.order_id
WHERE febSales.quantity > 2
AND length(febSales.orderid) = 6 
AND febSales.orderid <> 'Order ID'

--8. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product
