--Challenges provided by Coding Ninjas: https://www.codingninjas.com/studio/problems?category[]=SQL%20Databases

--IMDb Metacritic Rating

SELECT 
    i.title,
    i.rating
FROM IMDB i
JOIN earning e
ON i.movie_id = e.movie_id
WHERE SUBSTRING(i.title, LENGTH(i.title) - 4, 4) = '2012'
AND i.metaCritic > 60
AND e.domestic > 100000000;

--IMDb Max Weighted Rating

SELECT g.genre, MAX((i.rating + i.metaCritic/10.0)/2) AS weighted_rating
FROM genre g
JOIN imdb i 
ON g.movie_id = i.movie_id
WHERE SUBSTRING(i.title, LENGTH(i.title) - 4, 4) = '2014'
GROUP BY 1
HAVING g.genre IS NOT NULL
AND g.genre <> ''
AND MAX((i.rating + i.metaCritic/10.0)/2) IS NOT NULL
AND MAX((i.rating + i.metaCritic/10.0)/2) <> 0
ORDER BY 1 ASC;

--IMDb Rating

SELECT i.title, i.rating
FROM imdb i
JOIN genre g 
ON i.movie_id = g.movie_id
WHERE g.genre LIKE 'C%'
AND i.title LIKE '%2014%'
AND i.budget > 40000000;

--IMDb Genre

SELECT g.genre, MAX(e.domestic + e.worldwide - i.budget) AS net_profit
FROM imdb i
JOIN genre g 
ON i.movie_id = g.movie_id
JOIN earning e
ON i.movie_id = e.movie_id
WHERE i.title LIKE '%2012%'
GROUP BY 1
HAVING g.genre IS NOT NULL
AND g.genre <> ''
AND MAX(e.domestic + e.worldwide - i.budget) IS NOT NULL
AND MAX(e.domestic + e.worldwide - i.budget) <> 0
ORDER BY 1 ASC;

--Students DB

INSERT INTO students VALUES (3, 'Kim', 'F'), (4, 'Molina', 'F'), (5, 'Dev', 'M');

SELECT * FROM students;

--Big Countries

SELECT name, population, area
FROM world
WHERE area > 3000000
OR population > 25000000;

--Sales Executive

SELECT name
FROM salesperson
WHERE sales_id NOT IN (
    SELECT o.sales_id
    FROM orders o 
    JOIN company c 
    ON o.com_id = c.com_id
    WHERE c.name = 'RED'
);
