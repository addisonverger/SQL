--Database & questions provided by the SQLZOO Dressmaker Assessment: https://sqlzoo.net/wiki/Dressmaker

--(Easy) 1. List the post code, order number, order date and garment descriptions for all items associated with Ms Brown.

SELECT j.c_post_code, do.order_no, do.order_date, g.description
FROM jmcust j
JOIN dress_order do
ON j.c_no = do.cust_no
JOIN order_line ol
ON do.order_no = ol.order_ref
JOIN garment g
ON ol.ol_style = g.style_no
WHERE j.c_name = 'Ms Brown'

--(Easy) 2. List the customer name, postal information, order date and order number of all orders that have been completed.

SELECT j.c_name, j.c_house_no, j.c_post_code, do.order_date, do.order_no
FROM jmcust j
JOIN dress_order do
ON j.c_no = do.cust_no
WHERE do.completed = 'Y'

--(Easy) 3. Which garments have been made or are being made from 'red abstract' or 'blue abstract' coloured materials.

SELECT DISTINCT g.description
FROM garment g
JOIN order_line ol
ON g.style_no = ol.ol_style
JOIN material m
ON ol.ol_material = m.material_no
WHERE m.colour = 'Red Abstract'
OR m.colour = 'Blue Abstract'

--(Easy) 4. How many garments has each dressmaker constructed? You should give the number of garments and the name and postal information of each dressmaker.

SELECT COUNT(*) AS num_garments, d.d_name, d.d_house_no, d.d_post_code
FROM dressmaker d
JOIN construction c
ON d.d_no = c.maker
JOIN order_line o
ON c.order_ref = o.order_ref
AND c.line_ref = o.line_no
GROUP BY 2, 3, 4

--(Easy) 5. Give the names of those dressmakers who have finished items made from silk for completed orders.

SELECT DISTINCT d.d_name
FROM dressmaker d
JOIN construction c
ON d.d_no = c.maker
JOIN order_line o
ON c.order_ref = o.order_ref
AND c.line_ref = o.line_no
JOIN material m
ON o.ol_material = m.material_no
JOIN dress_order do
ON o.order_ref = do.order_no
WHERE m.fabric = 'Silk'
AND do.completed = 'Y'

--(Medium) 6. Assuming that any garment could be made in any of the available materials, list the garments (description, fabric, colour and pattern) which are expensive to make, that is, those for which the labour costs are 80% or more of the total cost.

WITH garment_CTE AS (
  SELECT DISTINCT description, labour_cost, quantity
  FROM garment g
  JOIN quantities q
  ON g.style_no = q.style_q
), material_CTE AS (
  SELECT DISTINCT fabric, colour, pattern, cost
  FROM material
)

SELECT g.description, m.fabric, m.colour, m.pattern
FROM garment_CTE g
CROSS JOIN material_CTE m
WHERE g.labour_cost / (g.labour_cost + m.cost * g.quantity) >= .8

--(Medium) 7. List the descriptions and the number of orders of the less popular garments, that is those for which less than the average number of orders per garment have been placed. Also print out the average number of orders per garment. When calculating the average, ignore any garments for which no orders have been made.

WITH garment_CTE AS (
  SELECT g.description, COUNT(ol.order_ref) AS num_orders
  FROM order_line ol
  JOIN garment g
  ON ol.ol_style = g.style_no
  GROUP BY g.description
)

SELECT description, num_orders
FROM garment_CTE
WHERE num_orders < (SELECT AVG(num_orders) FROM garment_CTE)
ORDER BY num_orders, description

--(Medium) 8. Which is the most popular line, that is, the garment with the highest number of orders. Bearing in mind the fact that there may be several such garments, list the garment description(s) and number(s) of orders.

WITH garment_CTE AS (
  SELECT g.description, COUNT(ol.order_ref) AS num_orders
  FROM order_line ol
  JOIN garment g
  ON ol.ol_style = g.style_no
  GROUP BY g.description
)

SELECT description, num_orders
FROM garment_CTE
WHERE num_orders = (SELECT MAX(num_orders) FROM garment_CTE)
ORDER BY description
