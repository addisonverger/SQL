--Database & questions provided by the SQLZOO Help Desk Assessment: https://sqlzoo.net/wiki/Help_Desk

--(Easy) 1. There are three issues that include the words "index" and "Oracle". Find the call_date for each of them.

SELECT call_date, call_ref
FROM issue
WHERE detail LIKE '%index%' 
AND detail LIKE '%Oracle%';

--(Easy) 2. Samantha Hall made three calls on 2017-08-14. Show the date and time for each.

SELECT i.call_date, c.first_name, c.last_name
FROM issue i
JOIN caller c
ON i.caller_id = c.caller_id
WHERE c.first_name = 'Samantha'
AND c.last_name = 'Hall'
AND i.call_date between '2017-08-14' and '2017-08-14 23:59:59';

--(Easy) 3. There are 500 calls in the system (roughly). Write a query that shows the number that have each status.

SELECT status, COUNT(*) AS Volume
FROM issue
GROUP BY status;

--(Easy) 4. Calls are not normally assigned to a manager but it does happen. How many calls have been assigned to staff who are at Manager Level?

SELECT COUNT(*) AS mlcc
FROM issue i
LEFT JOIN staff s
ON i.assigned_to = s.staff_code
WHERE s.level_code IN (SELECT level_code FROM level WHERE manager = 'Y');

--(Easy) 5. Show the manager for each shift. Your output should include the shift date and type; also the first and last name of the manager.

SELECT DATE(sh.shift_date), sh.shift_type, st.first_name, st.last_name
FROM shift sh
LEFT JOIN staff st
ON sh.manager = st.staff_code;

--(Medium) 6. List the Company name and the number of calls for those companies with more than 18 calls.

SELECT cu.company_name, COUNT(*) AS cc
FROM caller ca
JOIN issue i 
ON ca.caller_id = i.caller_id
JOIN customer cu
ON ca.company_ref = cu.company_ref
GROUP BY cu.company_name
HAVING COUNT(*) > 18;

--(Medium) 7. Find the callers who have never made a call. Show first name and last name.

SELECT first_name, last_name
FROM caller
WHERE caller_id NOT IN (SELECT caller_id FROM issue);

--(Medium) 8. For each customer show: Company name, contact name, number of calls where the number of calls is fewer than 5.

SELECT a.company_name, b.first_name, b.last_name, a.nc
FROM
  (SELECT cu.company_name, cu.contact_id, COUNT(*) AS nc
  FROM caller ca
  JOIN issue i 
  ON ca.caller_id = i.caller_id
  JOIN customer cu
  ON ca.company_ref = cu.company_ref
  GROUP BY cu.company_name, cu.contact_id
  HAVING COUNT(*) < 5) AS a
JOIN
  (SELECT *
  FROM caller) AS b
ON a.contact_id = b.caller_id
ORDER BY a.company_name;

--(Medium) 9. For each shift show the number of staff assigned. Beware that some roles may be NULL and that the same person might have been assigned to multiple roles (The roles are 'Manager', 'Operator', 'Engineer1', 'Engineer2').

SELECT a.shift_date, a.shift_type, COUNT(DISTINCT a.staff) AS cw
FROM
  (SELECT shift_date, shift_type, manager AS staff
  FROM shift
  UNION ALL
  SELECT shift_date, shift_type, operator AS staff
  FROM shift
  UNION ALL
  SELECT shift_date, shift_type, engineer1 AS staff
  FROM shift
  UNION ALL
  SELECT shift_date, shift_type, engineer2 AS staff
  FROM shift) AS a
GROUP BY a.shift_date, a.shift_type;

--(Medium) 10. Caller 'Harry' claims that the operator who took his most recent call was abusive and insulting. Find out who took the call (full name) and when.

SELECT s.first_name, s.last_name, i.call_date
FROM issue i
JOIN staff s
ON i.taken_by = s.staff_code
JOIN caller c
ON i.caller_id = c.caller_id
WHERE c.first_name = 'Harry'
ORDER BY i.call_date DESC LIMIT 1;
