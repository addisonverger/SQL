--Challenges provided by Leetcode: https://leetcode.com/
--All answers written in MySQL

--175. Combine Two Tables

SELECT p.firstName, p.lastName, a.city, a.state
FROM person p
LEFT JOIN address a
ON p.personId = a.personId;

--176. Second Highest Salary

SELECT MAX(salary) AS SecondHighestSalary
FROM employee
WHERE salary NOT IN (SELECT MAX(salary) FROM employee);

--177. Nth Highest Salary

CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
BEGIN
    DECLARE M INT;
    SET M=N-1;
  RETURN (
      # Write your MySQL query statement below.
      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1
  );
END

--178. Rank Scores

SELECT score, DENSE_RANK() OVER(ORDER BY score DESC) AS 'rank'
FROM scores
ORDER BY score DESC;

--180. Consecutive Numbers

SELECT DISTINCT L1.num AS ConsecutiveNums
FROM (
  logs L1 JOIN logs L2 ON L1.num = L2.num AND L1.id = L2.id-1
)
JOIN 
  logs L3 ON L1.num = L3.num AND L2.id = L3.id-1;

--181. Employees Earning More Than Their Managers

SELECT E1.name AS Employee
FROM employee E1
JOIN employee E2
ON E1.managerId = E2.id
AND E1.salary > E2.salary;

--182. Duplicate Emails

SELECT email AS Email
FROM person
GROUP BY email
HAVING COUNT(id) > 1;

--183. Customers Who Never Order

SELECT c.name AS Customers
FROM customers c
LEFT JOIN orders o
ON c.id = o.customerId
WHERE o.customerId IS NULL;

--184. Department Highest Salary

SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary
FROM employee e
JOIN department d
ON e.departmentId = d.id
AND (e.departmentId, e.salary) IN
  (SELECT departmentId, MAX(salary) 
  FROM employee 
  GROUP BY departmentId);

--185. Department Top Three Salaries

WITH employee_CTE AS (
  SELECT departmentId, name, salary,
  DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS dRank
  FROM employee
)

SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary
FROM employee_CTE e
JOIN department d
ON e.departmentId = d.id
WHERE e.dRank = 1 OR e.dRank = 2 OR e.dRank = 3
ORDER BY Department ASC, Salary DESC, Employee ASC;

--196. Delete Duplicate Emails

DELETE p1 
FROM person p1
JOIN person p2 
ON p1.email = p2.email
WHERE p1.id > p2.id;

--197. Rising Temperature

SELECT w1.id
FROM weather w1
JOIN weather w2
ON DATEDIFF(w1.recordDate, w2.recordDate) = 1 
WHERE w1.temperature > w2.temperature;
