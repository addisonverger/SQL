--Challenges provided by StrataScratch: https://platform.stratascratch.com/coding
--All answers written in MySQL

--Most Profitable Companies

SELECT profits, company
FROM forbes_global_2010_2014
ORDER BY profits DESC
LIMIT 3;

--Counting Instances in Text

WITH CTE AS (
    SELECT GROUP_CONCAT(contents SEPARATOR ' ') AS group_contents
    FROM google_file_store
)

SELECT 'bull' AS word, (LENGTH(group_contents) - LENGTH(REPLACE(group_contents, 'bull', ''))) / LENGTH('bull') AS nentry
FROM CTE
UNION
SELECT 'bear' AS word, (LENGTH(group_contents) - LENGTH(REPLACE(group_contents, 'bear', ''))) / LENGTH('bear') AS nentry
FROM CTE;

--Bikes Last Used

SELECT bike_number, MAX(end_time) AS last_used
FROM dc_bikeshare_q1_2012
GROUP BY bike_number
ORDER BY last_used DESC;

--Lyft Driver Wages

SELECT * 
FROM lyft_drivers
WHERE yearly_salary <= 30000
OR yearly_salary >= 70000;

--Find all posts which were reacted to with a heart

SELECT *
FROM facebook_posts
WHERE post_id IN (
    SELECT post_id
    FROM facebook_reactions
    WHERE reaction = 'heart'
);

--Popularity of Hack

SELECT fe.location, AVG(fhs.popularity) 
FROM facebook_employees fe
JOIN facebook_hack_survey fhs
ON fe.id = fhs.employee_id
GROUP BY fe.location;

--Acceptance Rate By Date

WITH a AS (
    SELECT *
    FROM fb_friend_requests
    WHERE action = 'sent'
), b AS (
    SELECT *
    FROM fb_friend_requests
    WHERE action = 'accepted'
)

SELECT a.date, COUNT(b.user_id_receiver) / COUNT(a.user_id_sender)
FROM a
LEFT JOIN b
ON a.user_id_sender = b.user_id_sender
AND a.user_id_receiver = b.user_id_receiver
GROUP BY a.date
ORDER BY a.date;

--Customer Revenue In March

SELECT cust_id, SUM(total_order_cost) AS revenue
FROM (
    SELECT cust_id, total_order_cost
    FROM orders
    WHERE order_date LIKE '2019-03%'
) 2019_orders
GROUP BY cust_id
ORDER BY revenue DESC;

--Find the rate of processed tickets for each type

SELECT type, AVG(processed)
FROM facebook_complaints
GROUP BY type;
