--Challenges provided by DataLemur: https://datalemur.com/
--All answers written in PostgreSQL

--Page With No Likes

SELECT page_id
FROM pages
WHERE page_id NOT IN (SELECT page_id FROM page_likes);

--Unfinished Parts

SELECT part, assembly_step
FROM parts_assembly
WHERE finish_date IS NULL;

--Histogram of Tweets

SELECT tweet_bucket, COUNT(*) AS users_num
FROM (
  SELECT COUNT(tweet_id) AS tweet_bucket
  FROM tweets
  WHERE EXTRACT('Year' FROM tweet_date) = 2022
  GROUP BY user_id
) tweet_bucket_counts
GROUP BY 1;

--Laptop vs. Mobile Viewership

SELECT 
  SUM(CASE WHEN device_type = 'laptop' THEN 1 ELSE 0 END) AS laptop_views,
  SUM(CASE WHEN device_type = 'tablet' OR device_type = 'phone' THEN 1 ELSE 0 END) AS laptop_views
FROM viewership;

--Data Science Skills

SELECT candidate_id
FROM candidates
WHERE skill IN ('Python', 'Tableau', 'PostgreSQL')
GROUP BY 1
HAVING COUNT(skill) = 3
ORDER BY 1 ASC;

--Average Post Hiatus (Part 1)

SELECT 
  user_id, 
  DATE_PART('day', MAX(post_date)::timestamp - MIN(post_date)::timestamp) AS days_between
FROM posts
WHERE user_id IN (
  SELECT user_id
  FROM posts
  WHERE EXTRACT('Year' FROM post_date) = 2021
  GROUP BY 1
  HAVING COUNT(post_id) >= 2
) 
GROUP BY 1;

--Teams Power Users

SELECT sender_id, COUNT(message_id) AS message_count
FROM messages
WHERE EXTRACT('Year' FROM sent_date) = 2022
AND EXTRACT('Month' FROM sent_date) = 8
GROUP BY 1
ORDER BY 2 DESC
LIMIT 2;
